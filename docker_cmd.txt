#build container
sudo docker build -t {container-name}:{tag} .

#คำสั่งเข้า cmd container
sudo docker exec -it {container name} share

#คำสั่งเข้าไปดู folder ใน images
sudo docker run -it --rm {images name} sh

##### port in container is 172.17.0.2 #####

#elasticsearch 
docker pull docker.elastic.co/elasticsearch/elasticsearch:7.5.1
docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.5.1
docker run -p 9200:9200 -p 9300:9300 -v ~/docker-persist-data/elasticsearch/edb1:/usr/share/elasticsearch/data -e "discovery.type=single-node" -e "discovery.type=single-node" -e "bootstrap.memory_lock=true" docker.elastic.co/elasticsearch/elasticsearch:7.10.1
                                                                                :/usr/share/elasticsearch/data

sudo mkdir -p $PWD/elasticsearch/data
sudo chmod 777 -R $PWD/elaticsearch/data
docker run -d --name elasticsearch -p 9200:9200 -p 9300:9300 -v $PWD/elasticsearch/data:/usr/share/elasticsearch/data -e "discovery.type=single-node" --name elasticsearch docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4


#redis
docker pull redis
docker run --name my-redis-container -p 127.0.0.1:6379:6379 -d redis

#postgres
docker run --name some-postgres -p 127.0.0.1:5432:5432 -e POSTGRES_PASSWORD=mandarinkb -d postgres 

#mysql
docker pull mysql
docker run --name mysql-standalone -p 127.0.0.1:3306:3306 -e MYSQL_ROOT_PASSWORD=mandarinkb -d mysql

#mariadb
docker pull mariadb:10.3
docker run --name mariadb-standalone -p 127.0.0.1:3306:3306 -e MYSQL_ROOT_PASSWORD=mandarinkb -d mariadb
docker run --name mariadb-standalone -p 3306:3306 -v ~/docker-persist-data/mariadb/mdb1:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=mandarinkb -d mariadb:10.3

#portainer
docker volume create portainer_data
docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer

#mongodb
docker pull mongo:4.2
docker run --name mongodb-v4.2 -p 127.0.0.1:27017:27017 -d mongo:4.2


#check port in container
docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ตามด้วยชื่อcontainerเช่น mysql

# log
docker logs -f  ตามด้วย id container





